(function(){"use strict";function q(s){let t=s>>>0;return function(){return t^=t<<13,t^=t>>>17,t^=t<<5,(t>>>0)/4294967295}}function m(s){return s.length?s.reduce((t,n)=>t+n,0)/s.length:0}function S(s,t=!1){const n=m(s);return s.reduce((c,i)=>c+Math.pow(i-n,2),0)/(s.length-(t?1:0)||1)}function k(s){return Math.sqrt(S(s))}function v(s){const t=m(s),n=k(s)||1,o=s.length;return s.reduce((i,l)=>i+Math.pow((l-t)/n,3),0)/o}function D(s){const t=m(s),n=k(s)||1,o=s.length;return s.reduce((i,l)=>i+Math.pow((l-t)/n,4),0)/o-3}function T(s,t){if(!s.length)return 0;const n=[...s].sort((l,h)=>l-h),o=(n.length-1)*t,c=Math.floor(o),i=Math.ceil(o);return c===i?n[c]:n[c]*(i-o)+n[i]*(o-c)}function F(s){let t=-1/0,n=0;for(const o of s){o>t&&(t=o);const c=(t-o)/t;c>n&&(n=c)}return n}function b(s,t,n){const{maxTradesPerRun:o,winProb:c,expectancyR:i,riskPerTradePct:l,riskPerTradeValue:h,initialCapital:M}=s;let a=M;const u=[a],r=[];for(let P=0;P<o;P++){const R=t()<c;let p=i;if(n&&n.length>0){const g=Math.floor(t()*n.length);p=n[g],p=p*(.98+t()*.04)}else{const g=Math.tan(Math.PI*(t()-.5))*.01;p=i+g}const y=h??(l?a*l:a*.01),w=(R?p:-1)*y,x=w/a;if(a=a+w,!isFinite(a)||a<=0){a=0,u.push(a),r.push(x);break}u.push(a),r.push(x)}const d=a,f=F(u);return{equitySeries:u,returnsPerTrade:r,tradesSimulated:u.length-1,maxDrawdown:f,finalEquity:d}}function C(s,t){const n=s.map(e=>e.finalEquity),o=m(n),c=T(n,.5),i=T(n,.05),l=T(n,.95),h=t.tradesPerYear??252,M=m(s.map(e=>e.tradesSimulated||0)),a=Math.max(1/365,M/h),u=Math.pow(o/(t.initialCapital||1),1/a)-1,r=[];s.forEach(e=>r.push(...e.returnsPerTrade||[]));const d=m(r),f=k(r),P=f===0?0:d/f*Math.sqrt(h),R=Math.sqrt(m(r.filter(e=>e<0).map(e=>e*e))),p=R===0?0:d/R*Math.sqrt(h),y=Math.max(...s.map(e=>e.maxDrawdown??0)),w=y===0?0:u/y,x=r.filter(e=>e>0).reduce((e,E)=>e+E,0),g=Math.abs(r.filter(e=>e<0).reduce((e,E)=>e+E,0)),I=g===0?1/0:x/g,L=d*(t.riskPerTradeValue??(t.riskPerTradePct?t.initialCapital*t.riskPerTradePct:t.initialCapital*.01)),O=v(r),V=D(r),A=s.filter(e=>e.finalEquity<=0).length/s.length;return{avgFinal:o,medianFinal:c,p05:i,p95:l,cagr:u,maxDrawdown:y,calmar:w,sharpe:P,sortino:p,profitFactor:I,expectedValue:L,skewness:O,kurtosis:V,probRuin:A,totalRuns:s.length}}self.addEventListener("message",s=>{const t=s.data;if(t.type==="TERMINATE"){try{self.close()}catch{}return}if(t.type==="START"){const n=t.config,o=t.empiricalR,c=n.seed?q(n.seed):Math.random,i=[],l=[],h=Math.max(1,Math.floor(n.simulations/100));let M=0;try{for(let r=0;r<n.simulations;r++){const d=b(n,c,o);if(i.push(d),l.length<30&&r%Math.max(1,Math.floor(Math.max(1,n.simulations/30)))===0&&l.push(d),r%h===0){const f=Math.floor(r/n.simulations*100);f!==M&&(M=f,self.postMessage({type:"PROGRESS",progress:f}))}}const u={type:"RESULT",summary:C(i,n),sampleRuns:l};self.postMessage(u)}catch(a){self.postMessage({type:"ERROR",message:a?.message||String(a)})}}})})();
